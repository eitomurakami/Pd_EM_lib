#N canvas -11 -11 1920 970 12;
#X floatatom 143 456 5 0 0 1 output - -;
#X obj 60 340 expr random($f2 \, $f3);
#X obj 132 369 + 1;
#X obj 242 204 f;
#X obj 161 205 f;
#X obj 89 250 f;
#X obj 124 235 expr $f3-1 \; $f2-$f3+1;
#X obj 60 458 sel 0;
#X obj 242 169 t b f;
#X obj 161 170 t b f;
#X msg 332 193 0;
#X obj 332 168 t b b;
#X obj 60 169 t b b;
#X floatatom 224 295 5 0 0 1 max(exclusive) - -;
#X floatatom 172 404 5 0 0 1 min(inclusive) - -;
#X obj 60 369 t b f;
#X obj 60 429 f;
#X obj 60 134 inlet;
#X text 58 112 trigger;
#X obj 161 134 inlet;
#X text 163 114 range;
#X obj 242 134 inlet;
#X text 243 114 number;
#X obj 332 134 inlet;
#X text 333 115 reset;
#X obj 134 478 outlet;
#X text 58 521 EM_randlist (06/06/21);
#X text 58 19 This abstraction generates semi-random numbers without
duplicates in ascending order based on the specified range and number
of values. The higher numbers have a higher probability of being selected.
Use with EM_granular_voice to control voice allocation.;
#X connect 1 0 2 0;
#X connect 1 0 15 0;
#X connect 2 0 1 1;
#X connect 2 0 14 0;
#X connect 3 0 6 2;
#X connect 4 0 6 1;
#X connect 5 0 6 2;
#X connect 5 0 16 1;
#X connect 6 0 5 0;
#X connect 6 1 1 2;
#X connect 6 1 13 0;
#X connect 7 0 11 0;
#X connect 8 0 4 0;
#X connect 8 1 3 0;
#X connect 9 0 3 0;
#X connect 9 1 4 0;
#X connect 10 0 1 1;
#X connect 11 0 10 0;
#X connect 11 1 3 0;
#X connect 11 1 4 0;
#X connect 12 0 1 0;
#X connect 12 1 6 0;
#X connect 15 0 16 0;
#X connect 15 1 0 0;
#X connect 15 1 25 0;
#X connect 16 0 7 0;
#X connect 17 0 12 0;
#X connect 19 0 9 0;
#X connect 21 0 8 0;
#X connect 23 0 11 0;
