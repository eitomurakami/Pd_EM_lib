#N canvas -11 -11 1920 970 12;
#X obj 207 405 s \$0density;
#X obj 107 375 s \$0freq_arg;
#X obj 17 346 s \$0rec_arg;
#X obj 107 346 s \$0reclength_arg;
#X obj 107 404 s \$0drywet;
#X obj 375 241 sel 0 1;
#X msg 375 345 0;
#X obj 416 344 s \$0freeze;
#X obj 107 55 r \$0drywet_GUI;
#X obj 375 373 s \$0drywet_GUI;
#X msg 416 310 1;
#X obj 398 271 t b b;
#X obj 107 -3 r \$0freq_GUI;
#X obj 107 26 r \$0reclength_GUI;
#X obj 207 113 r \$0density_GUI;
#N canvas -11 -11 1920 970 wet 0;
#X obj 42 577 outlet~;
#X obj 158 577 outlet~;
#N canvas -11 -11 1920 970 phasor 0;
#X obj 65 150 phasor~;
#X obj 312 273 snapshot~;
#X obj 247 389 +;
#X obj 295 389 f;
#X obj 215 359 t f f;
#X obj 247 420 t f b;
#X obj 279 482 f;
#X obj 247 482 -;
#X obj 215 509 -;
#X obj 375 306 +;
#X text 311 483 new onset minus old onset;
#X text 380 510 back up phasor output by amount the onset advanced
;
#X text 378 523 (approximately zero but not exactly because of;
#X text 380 537 truncation error!);
#X text 381 556 convert phase back to range 0-1;
#X text 220 182 convert phase to range +/- 5000, f 16;
#X text 412 305 extrapolate snapshot of phase by one sample to sync
with next block, f 34;
#X obj 312 244 bang~;
#X obj 65 190 expr~ ($v1-0.5)*10000;
#X obj 297 454 r \$0onset_reset;
#X obj 265 360 r \$0onset_reset;
#X obj 393 252 r \$0freq;
#X obj 393 279 expr ($f1/$f2)*10000;
#X obj 530 223 loadbang;
#X obj 530 252 samplerate~;
#X text 361 417 new onset: phase plus old onset;
#X obj 215 538 expr ($f1/10000)+0.5;
#X obj 310 419 outlet;
#X obj 64 244 outlet~;
#X obj 65 91 inlet;
#X text 68 69 freq;
#X obj 65 120 lop~ 100;
#X obj 1008 383 r \$0samples;
#X obj 759 447 change;
#X obj 791 609 s \$0onset_reset;
#X text 1029 410 1: foward \; 2: backward;
#X obj 759 476 sel 1 2;
#X msg 791 581 0;
#X obj 901 540 r \$0samples;
#X obj 883 575 f;
#X obj 215 330 r \$0phase_reset;
#X msg 951 581 0;
#X obj 951 609 s \$0phase_reset;
#X obj 759 511 t b b;
#X obj 851 514 t b b;
#X obj 759 408 expr if($f1>$f2 \, 1 \, if($f1<0 \, 2 \, 0));
#X text 758 384 loop alg;
#X text 69 10 This subpatch is based on a Pd example B.16 long-varispeed.
At every bang~ \, the phasor~ phase is added to the onset and the onset
increase is subtracted from the phase.;
#X connect 0 0 18 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 2 0 5 0;
#X connect 2 0 27 0;
#X connect 2 0 45 0;
#X connect 3 0 2 1;
#X connect 4 0 8 0;
#X connect 4 1 2 0;
#X connect 5 0 6 1;
#X connect 5 0 7 0;
#X connect 5 1 6 0;
#X connect 6 0 7 1;
#X connect 7 0 8 1;
#X connect 8 0 26 0;
#X connect 9 0 4 0;
#X connect 17 0 1 0;
#X connect 18 0 1 0;
#X connect 18 0 28 0;
#X connect 19 0 6 1;
#X connect 20 0 2 1;
#X connect 21 0 22 0;
#X connect 22 0 9 1;
#X connect 23 0 24 0;
#X connect 24 0 22 1;
#X connect 26 0 0 1;
#X connect 29 0 31 0;
#X connect 31 0 0 0;
#X connect 32 0 45 1;
#X connect 33 0 36 0;
#X connect 36 0 43 0;
#X connect 36 1 44 0;
#X connect 37 0 34 0;
#X connect 38 0 39 1;
#X connect 39 0 34 0;
#X connect 40 0 4 0;
#X connect 41 0 42 0;
#X connect 43 0 41 0;
#X connect 43 1 37 0;
#X connect 44 0 41 0;
#X connect 44 1 39 0;
#X connect 45 0 33 0;
#X restore 42 43 pd phasor;
#X text 619 22 speed(%);
#N canvas -11 -11 1920 970 ctrl 0;
#X obj 47 323 expr $f1*$f2/1000000;
#X obj 184 266 loadbang;
#X obj 184 295 samplerate~;
#X obj 47 293 f;
#X text 196 323 <-cycles per sec;
#X obj 47 352 s \$0freq;
#X obj 47 105 inlet;
#X obj 211 95 inlet;
#X text 215 74 play;
#X obj 434 316 spigot;
#X obj 494 316 spigot;
#X obj 434 414 s \$0onset_reset;
#X msg 434 385 0;
#X obj 494 382 f;
#X msg 564 385 0;
#X obj 564 414 s \$0phase_reset;
#X obj 434 345 t b b;
#X obj 494 345 t b b;
#X obj 473 259 expr if($f1>0 \, 1 \, if($f1<0 \, 2 \, 0));
#X obj 473 288 == 1;
#X obj 533 288 == 2;
#X text 729 258 1: foward \; 2: backward;
#X text 46 84 speed(%);
#X obj 512 94 inlet;
#X text 513 75 samples;
#X obj 211 124 t b b;
#X text 47 18 This subpatch resets the phase and onset based on the
playback direction when "play" is triggered.;
#X connect 0 0 5 0;
#X connect 1 0 2 0;
#X connect 2 0 0 1;
#X connect 3 0 0 0;
#X connect 6 0 3 0;
#X connect 6 0 18 0;
#X connect 7 0 25 0;
#X connect 9 0 16 0;
#X connect 10 0 17 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 14 0 15 0;
#X connect 16 0 14 0;
#X connect 16 1 12 0;
#X connect 17 0 14 0;
#X connect 17 1 13 0;
#X connect 18 0 19 0;
#X connect 18 0 20 0;
#X connect 19 0 9 1;
#X connect 20 0 10 1;
#X connect 23 0 13 1;
#X connect 25 0 3 0;
#X connect 25 1 9 0;
#X connect 25 1 10 0;
#X restore 609 129 pd ctrl;
#X obj 42 14 r \$0freq;
#X obj 632 71 r \$0play_arg;
#X obj 655 100 r \$0samples;
#X obj 609 42 r \$0freq_arg;
#X obj 42 132 tabread4~;
#X obj 158 132 tabread4~;
#N canvas 0 50 782 379 recenv 0;
#X obj 28 56 inlet~;
#X obj 28 115 *~;
#X obj 148 86 vline~;
#X obj 88 56 inlet~;
#X obj 88 115 *~;
#X obj 28 144 outlet~;
#X obj 88 144 outlet~;
#X obj 148 28 r \$0recenv;
#X msg 148 57 1 \, 0 10 \, 1 10 10;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 2 0 4 1;
#X connect 2 0 1 1;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 2 0;
#X restore 42 532 pd recenv;
#N canvas -11 -11 1920 970 windowl 0;
#X obj 64 87 inlet~;
#X obj 64 316 *~;
#X obj 499 127 r \$0samples;
#X obj 139 89 inlet;
#X text 69 66 audio;
#X text 137 67 index (onset);
#X obj 64 448 outlet~;
#X obj 82 392 *~;
#X obj 64 419 +~;
#X obj 82 258 lop~ 100;
#X obj 237 344 expr~ 1-$v1;
#X obj 82 198 *~ 100;
#X obj 82 224 dbtorms~;
#X obj 237 373 lop~ 100;
#X obj 205 214 r \$0freq_arg;
#X obj 531 215 loadbang;
#X obj 531 244 samplerate~;
#X obj 82 155 expr if($f1<1000 \, $f1/1000 \, if($f1>$f2-1000 \, ($f2-$f1)/1000
\, 1));
#X obj 85 125 delwrite~ \$0winl 1000;
#X text 281 297 delaytime = 1000*window_size/SR/speed + 10;
#X obj 205 272 expr 100000000/max($f2 \, 1)/max($f1 \, 1e-20) + 10
;
#X text 59 14 This subpatch applies a window to the loop and fills
the gap with a delayed signal.;
#X obj 205 243 abs;
#X obj 82 345 delread4~ \$0winl 155;
#X obj 205 301 lop~ 100;
#X text 515 163 <-window size: 1000samples;
#X text 234 244 <-abs speed(%);
#X connect 0 0 1 0;
#X connect 0 0 18 0;
#X connect 1 0 8 0;
#X connect 2 0 17 1;
#X connect 3 0 17 0;
#X connect 7 0 8 1;
#X connect 8 0 6 0;
#X connect 9 0 1 1;
#X connect 10 0 13 0;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 12 0 10 0;
#X connect 13 0 7 1;
#X connect 14 0 22 0;
#X connect 15 0 16 0;
#X connect 16 0 20 1;
#X connect 17 0 11 0;
#X connect 20 0 24 0;
#X connect 22 0 20 0;
#X connect 23 0 7 0;
#X connect 24 0 23 0;
#X restore 42 161 pd windowl;
#N canvas -11 -11 1920 970 windowr 0;
#X obj 57 93 inlet~;
#X obj 57 322 *~;
#X obj 492 133 r \$0samples;
#X obj 132 95 inlet;
#X text 62 72 audio;
#X text 133 72 index (onset);
#X obj 57 454 outlet~;
#X obj 75 398 *~;
#X obj 57 425 +~;
#X obj 75 264 lop~ 100;
#X obj 230 350 expr~ 1-$v1;
#X obj 75 204 *~ 100;
#X obj 75 230 dbtorms~;
#X obj 230 379 lop~ 100;
#X obj 75 161 expr if($f1<1000 \, $f1/1000 \, if($f1>$f2-1000 \, ($f2-$f1)/1000
\, 1));
#X obj 78 131 delwrite~ \$0winr 1000;
#X obj 75 351 delread4~ \$0winr 155;
#X text 59 14 This subpatch applies a window to the loop and fills
the gap with a delayed signal.;
#X text 503 169 <-window size: 1000samples;
#X obj 524 221 loadbang;
#X obj 524 250 samplerate~;
#X obj 198 220 r \$0freq_arg;
#X obj 198 249 abs;
#X obj 198 302 lop~ 100;
#X text 274 303 delaytime = 1000*window_size/SR/speed + 10;
#X text 234 248 <-abs speed(%);
#X obj 198 278 expr 100000000/max($f2 \, 1)/max($f1 \, 1e-20) + 10
;
#X connect 0 0 1 0;
#X connect 0 0 15 0;
#X connect 1 0 8 0;
#X connect 2 0 14 1;
#X connect 3 0 14 0;
#X connect 7 0 8 1;
#X connect 8 0 6 0;
#X connect 9 0 1 1;
#X connect 10 0 13 0;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 12 0 10 0;
#X connect 13 0 7 1;
#X connect 14 0 11 0;
#X connect 16 0 7 0;
#X connect 19 0 20 0;
#X connect 20 0 26 1;
#X connect 21 0 22 0;
#X connect 22 0 26 0;
#X connect 23 0 16 0;
#X connect 26 0 23 0;
#X restore 158 161 pd windowr;
#N canvas -11 -11 1920 970 tablesel 0;
#X obj 35 69 r \$0tablesel;
#X obj 35 98 sel 0 1;
#X obj 35 127 f \$0;
#X obj 175 127 f \$0;
#X msg 175 156 set \$1l2;
#X msg 245 156 set \$1r2;
#X msg 35 156 set \$1l1;
#X msg 105 156 set \$1r1;
#X obj 35 185 outlet;
#X obj 175 185 outlet;
#X text 34 19 toggle between the two recording buffers.;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 6 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X restore 177 82 pd tablesel;
#X text 142 530 <-generate an envelope at the end of a recording to
avoid a click;
#X text 234 350 <-voice;
#X text 242 163 <-apply a window to a loop;
#X text 116 41 <-main playback algorithm;
#X text 272 82 <-toggle between the two recording buffers;
#X obj 150 252 r \$0reclength_arg;
#N canvas -11 -11 1920 970 randlist 0;
#X obj 108 230 until;
#X obj 168 394 sel 0 1 2 3 4 5 6 7 8 9;
#X msg 168 421 1;
#X msg 198 421 1;
#X msg 228 421 1;
#X msg 258 421 1;
#X msg 288 421 1;
#X msg 318 421 1;
#X msg 348 421 1;
#X msg 378 421 1;
#X msg 408 421 1;
#X msg 438 421 1;
#X obj 133 258 loadbang;
#X msg 133 287 10;
#X obj 168 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 198 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 228 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 258 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 288 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 318 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 348 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 378 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 62 105 t b b b;
#X obj 408 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 438 450 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 627 431 0;
#X obj 108 345 expr 9-$f1;
#X text 188 345 <-invert the range: lower numbers have a higher probability
;
#X obj 62 78 inlet;
#X obj 108 316 EM_randlist;
#X obj 62 419 outlet;
#X obj 62 185 moses 2;
#X obj 62 375 f;
#X obj 62 214 - 1;
#X obj 62 156 i;
#X obj 156 79 inlet;
#X text 61 57 trigger;
#X text 158 57 number;
#X text 58 10 This subpatch randomizes the voice allocation using EM_randlist.
;
#X text 343 394 <-visual representation of voice allocation;
#X connect 0 0 29 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 1 2 4 0;
#X connect 1 3 5 0;
#X connect 1 4 6 0;
#X connect 1 5 7 0;
#X connect 1 6 8 0;
#X connect 1 7 9 0;
#X connect 1 8 10 0;
#X connect 1 9 11 0;
#X connect 2 0 14 0;
#X connect 3 0 15 0;
#X connect 4 0 16 0;
#X connect 5 0 17 0;
#X connect 6 0 18 0;
#X connect 7 0 19 0;
#X connect 8 0 20 0;
#X connect 9 0 21 0;
#X connect 10 0 23 0;
#X connect 11 0 24 0;
#X connect 12 0 13 0;
#X connect 13 0 29 1;
#X connect 22 0 34 0;
#X connect 22 1 29 3;
#X connect 22 2 25 0;
#X connect 25 0 24 0;
#X connect 25 0 23 0;
#X connect 25 0 21 0;
#X connect 25 0 20 0;
#X connect 25 0 19 0;
#X connect 25 0 18 0;
#X connect 25 0 17 0;
#X connect 25 0 16 0;
#X connect 25 0 15 0;
#X connect 25 0 14 0;
#X connect 26 0 32 0;
#X connect 28 0 22 0;
#X connect 29 0 26 0;
#X connect 31 0 33 0;
#X connect 31 1 0 0;
#X connect 32 0 30 0;
#X connect 32 0 1 0;
#X connect 33 0 32 0;
#X connect 34 0 31 0;
#X connect 35 0 29 2;
#X connect 35 0 34 1;
#X restore 306 280 pd randlist;
#X obj 42 348 clone EM_granular_voice 10;
#X msg 132 309 all \$1;
#X msg 306 309 all \$1;
#X msg 415 312 all \$1;
#X obj 132 280 f;
#X msg 415 280 0;
#X obj 492 222 r \$0density;
#X obj 273 379 r \$0density;
#X obj 273 467 lop~ 100;
#X obj 42 487 *~;
#X obj 222 487 *~;
#X obj 492 251 t b b f b;
#X obj 273 408 expr 100-($f1-1);
#X obj 273 438 dbtorms;
#N canvas -11 -11 1920 970 voice_randomize 0;
#X obj 42 61 r \$0phase_reset;
#X obj 42 90 b;
#X obj 42 275 outlet;
#X obj 42 119 f;
#X obj 77 119 + 1;
#X msg 85 216 0;
#X obj 42 246 sel 0;
#X obj 133 92 r \$0density_random;
#X obj 85 187 sel 1;
#X obj 133 121 expr 10-$f1;
#X obj 85 158 >= 10;
#X text 41 15 This subpatch determines how often the voice allocation
is randomized.;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 3 0 10 0;
#X connect 4 0 3 1;
#X connect 5 0 3 1;
#X connect 6 0 2 0;
#X connect 7 0 9 0;
#X connect 8 0 5 0;
#X connect 9 0 10 1;
#X connect 10 0 8 0;
#X restore 306 222 pd voice_randomize;
#X obj 306 251 t b b;
#X text 400 407 <-reduce the gain as the voice number increases;
#X obj 605 300 r \$0pan_depth;
#X msg 605 329 all \$1;
#X connect 2 0 9 0;
#X connect 2 0 10 0;
#X connect 2 1 12 1;
#X connect 2 1 13 1;
#X connect 2 1 9 1;
#X connect 2 1 10 1;
#X connect 5 0 2 0;
#X connect 6 0 4 1;
#X connect 7 0 4 2;
#X connect 8 0 4 0;
#X connect 9 0 12 0;
#X connect 10 0 13 0;
#X connect 11 0 0 0;
#X connect 11 1 1 0;
#X connect 12 0 22 1;
#X connect 13 0 22 2;
#X connect 14 0 9 0;
#X connect 14 1 10 0;
#X connect 20 0 26 1;
#X connect 21 0 24 0;
#X connect 22 0 31 0;
#X connect 22 1 32 0;
#X connect 23 0 22 3;
#X connect 24 0 22 4;
#X connect 25 0 22 5;
#X connect 26 0 23 0;
#X connect 27 0 25 0;
#X connect 28 0 33 0;
#X connect 29 0 34 0;
#X connect 30 0 31 1;
#X connect 30 0 32 1;
#X connect 31 0 11 0;
#X connect 32 0 11 1;
#X connect 33 0 26 0;
#X connect 33 1 21 0;
#X connect 33 2 21 1;
#X connect 33 3 27 0;
#X connect 34 0 35 0;
#X connect 35 0 30 0;
#X connect 36 0 37 0;
#X connect 37 0 21 0;
#X connect 37 1 27 0;
#X connect 39 0 40 0;
#X connect 40 0 22 6;
#X restore 107 647 pd wet;
#X obj 57 570 inlet~;
#X obj 109 570 inlet~;
#N canvas -11 -11 1920 970 rec 0;
#X obj 179 70 inlet~;
#X obj 251 69 inlet~;
#X text 188 50 left;
#X text 254 49 right;
#X obj 387 39 inlet;
#X text 387 18 trigger;
#X obj 387 68 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 387 93 sel 0 1;
#N canvas -11 -11 1920 970 first 0;
#X obj 560 133 t b f;
#X obj 560 162 f \$0;
#X obj 560 191 pack f f;
#X obj 560 104 expr $f1*$f2*0.001;
#X obj 683 48 loadbang;
#X obj 683 77 samplerate~;
#X obj 560 75 f;
#X obj 396 180 del;
#X obj 416 385 s \$0play_arg;
#X obj 578 15 r \$0reclength_arg;
#X obj 168 40 inlet~;
#X obj 278 40 inlet~;
#X obj 376 24 inlet;
#X obj 436 355 s \$0tablesel;
#X msg 436 326 0;
#X obj 456 296 s \$0samples;
#X obj 456 267 f;
#X obj 416 151 s \$0recenv;
#X obj 376 56 t b b b b;
#X obj 416 122 del;
#X obj 434 94 - 10;
#X obj 168 98 tabwrite~ \$0l1;
#X obj 278 98 tabwrite~ \$0r1;
#X msg 560 220 \; \$1l1 resize \$2 \; \$1r1 resize \$2 \;;
#X obj 396 209 t b b b b;
#X obj 396 443 spigot;
#X obj 435 415 r \$0freeze;
#X obj 396 501 s \$0drywet_GUI;
#X msg 396 472 100;
#X text 528 354 <-toggle between the recording buffers;
#X text 517 385 <-play the loop;
#X text 517 414 <-freeze algorithm;
#X text 545 296 <-update the sample size;
#X text 677 236 <-resize tables;
#X text 14 151 apply an envelope 10ms before the end of a recording->
;
#X text 696 103 <-convert reclength(ms) to samples;
#X connect 0 0 1 0;
#X connect 0 1 2 1;
#X connect 1 0 2 0;
#X connect 2 0 23 0;
#X connect 3 0 0 0;
#X connect 3 0 16 1;
#X connect 4 0 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 0;
#X connect 6 0 7 1;
#X connect 6 0 20 0;
#X connect 7 0 24 0;
#X connect 9 0 6 1;
#X connect 10 0 21 0;
#X connect 11 0 22 0;
#X connect 12 0 18 0;
#X connect 14 0 13 0;
#X connect 16 0 15 0;
#X connect 18 0 21 0;
#X connect 18 0 22 0;
#X connect 18 1 7 0;
#X connect 18 2 6 0;
#X connect 18 2 19 0;
#X connect 19 0 17 0;
#X connect 20 0 19 1;
#X connect 24 0 25 0;
#X connect 24 1 8 0;
#X connect 24 2 14 0;
#X connect 24 3 16 0;
#X connect 25 0 28 0;
#X connect 26 0 25 1;
#X connect 28 0 27 0;
#X restore 179 140 pd first;
#N canvas -11 -11 1920 970 second 0;
#X obj 562 133 t b f;
#X obj 562 162 f \$0;
#X obj 562 191 pack f f;
#X obj 562 104 expr $f1*$f2*0.001;
#X obj 685 48 loadbang;
#X obj 685 77 samplerate~;
#X obj 562 75 f;
#X obj 398 180 del;
#X obj 418 385 s \$0play_arg;
#X obj 580 15 r \$0reclength_arg;
#X obj 170 40 inlet~;
#X obj 280 40 inlet~;
#X obj 378 24 inlet;
#X obj 438 355 s \$0tablesel;
#X obj 458 296 s \$0samples;
#X obj 458 267 f;
#X obj 418 151 s \$0recenv;
#X obj 378 56 t b b b b;
#X obj 418 122 del;
#X obj 436 94 - 10;
#X obj 398 209 t b b b b;
#X obj 398 443 spigot;
#X obj 437 415 r \$0freeze;
#X obj 398 496 s \$0drywet_GUI;
#X obj 170 98 tabwrite~ \$0l2;
#X obj 280 98 tabwrite~ \$0r2;
#X msg 438 326 1;
#X msg 562 220 \; \$1l2 resize \$2 \; \$1r2 resize \$2 \;;
#X msg 398 472 100;
#X text 538 354 <-toggle between the recording buffers;
#X text 527 385 <-play the loop;
#X text 527 414 <-freeze algorithm;
#X text 555 296 <-update the sample size;
#X text 687 236 <-resize tables;
#X text 14 156 apply an envelope 10ms before the end of a recording->
;
#X text 706 103 <-convert reclength(ms) to samples;
#X connect 0 0 1 0;
#X connect 0 1 2 1;
#X connect 1 0 2 0;
#X connect 2 0 27 0;
#X connect 3 0 0 0;
#X connect 3 0 15 1;
#X connect 4 0 5 0;
#X connect 5 0 3 1;
#X connect 6 0 3 0;
#X connect 6 0 7 1;
#X connect 6 0 19 0;
#X connect 7 0 20 0;
#X connect 9 0 6 1;
#X connect 10 0 24 0;
#X connect 11 0 25 0;
#X connect 12 0 17 0;
#X connect 15 0 14 0;
#X connect 17 0 24 0;
#X connect 17 0 25 0;
#X connect 17 1 7 0;
#X connect 17 2 6 0;
#X connect 17 2 18 0;
#X connect 18 0 16 0;
#X connect 19 0 18 1;
#X connect 20 0 21 0;
#X connect 20 1 8 0;
#X connect 20 2 26 0;
#X connect 20 3 15 0;
#X connect 21 0 28 0;
#X connect 22 0 21 1;
#X connect 26 0 13 0;
#X connect 28 0 23 0;
#X restore 299 140 pd second;
#X text 381 141 <-toggle between the two recording buffers;
#X obj 33 52 table \$0l1;
#X obj 33 82 table \$0r1;
#X obj 33 111 table \$0l2;
#X obj 33 141 table \$0r2;
#X connect 0 0 8 0;
#X connect 0 0 9 0;
#X connect 1 0 8 1;
#X connect 1 0 9 1;
#X connect 4 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 9 2;
#X connect 7 1 8 2;
#X restore 157 608 pd rec;
#X obj 196 581 r \$0rec_arg;
#X obj 57 784 outlet~;
#X obj 124 784 outlet~;
#X obj 157 677 r \$0drywet;
#X obj 157 706 / 100;
#X obj 57 754 EM_drywet~;
#X obj 157 735 sig~;
#X text 217 607 <-recording algorithm;
#X text 157 648 <-main playback algorithm;
#X text 151 758 <-combine the dry and wet signals;
#X obj 207 463 s \$0density_random;
#X obj 207 521 s \$0pan_depth;
#X obj 207 142 r \$0density_random_GUI;
#X obj 207 171 r \$0pan_depth_GUI;
#X floatatom 107 279 5 10 9999 1 rec_time - -;
#X floatatom 107 251 5 0 0 1 speed - -;
#X floatatom 107 307 5 0 100 1 dry/wet - -;
#X floatatom 207 251 5 1 10 1 density - -;
#X floatatom 207 279 5 0 10 1 density_random - -;
#X floatatom 207 307 5 0 100 1 pan_depth - -;
#X obj 107 226 bng 15 250 50 0 empty empty record 17 7 0 10 -262144
-1 -1;
#X obj 177 226 tgl 15 0 empty empty freeze 17 7 0 10 -262144 -1 -1
0 1;
#X obj 207 376 i;
#X obj 207 434 i;
#X obj 430 10 inlet;
#X obj 430 39 b;
#X text 427 -10 record;
#X obj 521 10 inlet;
#X obj 521 39 i;
#X obj 521 68 clip 0 1;
#X obj 430 68 s \$0rec_GUI;
#X text 518 -10 freeze;
#X obj 521 97 s \$0freeze_GUI;
#X obj 633 10 inlet;
#X obj 107 -32 r \$0rec_GUI;
#X obj 177 84 r \$0freeze_GUI;
#X obj 633 39 s \$0freq_GUI;
#X text 633 -12 speed;
#X obj 731 10 inlet;
#X text 731 -12 rec_time;
#X obj 731 68 s \$0reclength_GUI;
#X obj 731 39 clip 10 9999;
#N canvas -11 -11 1920 970 init 0;
#X obj 63 95 loadbang;
#X obj 63 124 f \$0;
#X msg 63 153 \; \$1reclength_GUI 1000 \; \$1freq_GUI 100 \; \$1drywet_GUI
50 \; \$1density_GUI 1 \; \$1density_random_GUI 0 \; \$1pan_depth_GUI
0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 58 538 pd init;
#X obj 864 10 inlet;
#X obj 864 39 i;
#X text 861 -10 density;
#X obj 864 68 clip 1 10;
#X obj 864 97 s \$0density_GUI;
#X obj 983 10 inlet;
#X obj 983 39 i;
#X obj 983 97 s \$0density_random_GUI;
#X obj 207 492 / 100;
#X obj 1151 10 inlet;
#X obj 1151 39 i;
#X obj 1151 68 clip 0 100;
#X obj 1151 97 s \$0pan_depth_GUI;
#X text 980 -10 density_random;
#X text 1148 -10 pan_depth;
#X obj 1284 10 inlet;
#X obj 1284 39 i;
#X obj 1284 68 clip 0 100;
#X text 1281 -10 dry/wet;
#X obj 1284 97 s \$0drywet_GUI;
#X text 40 848 Eito Murakami - EM_granular (0628/21);
#X text 36 875 (A 10-voice looper/granular synthesizer);
#X obj 983 68 clip 0 10;
#X connect 5 0 6 0;
#X connect 5 1 11 0;
#X connect 6 0 7 0;
#X connect 6 0 9 0;
#X connect 8 0 35 0;
#X connect 10 0 7 0;
#X connect 11 0 39 0;
#X connect 11 1 10 0;
#X connect 12 0 34 0;
#X connect 13 0 33 0;
#X connect 14 0 36 0;
#X connect 15 0 24 2;
#X connect 15 1 24 3;
#X connect 16 0 18 0;
#X connect 16 0 24 0;
#X connect 17 0 18 1;
#X connect 17 0 24 1;
#X connect 19 0 18 2;
#X connect 22 0 23 0;
#X connect 23 0 25 0;
#X connect 24 0 20 0;
#X connect 24 1 21 0;
#X connect 25 0 24 4;
#X connect 31 0 37 0;
#X connect 32 0 38 0;
#X connect 33 0 3 0;
#X connect 34 0 1 0;
#X connect 35 0 4 0;
#X connect 36 0 41 0;
#X connect 37 0 42 0;
#X connect 38 0 70 0;
#X connect 39 0 2 0;
#X connect 40 0 5 0;
#X connect 41 0 0 0;
#X connect 42 0 29 0;
#X connect 43 0 44 0;
#X connect 44 0 49 0;
#X connect 46 0 47 0;
#X connect 47 0 48 0;
#X connect 48 0 51 0;
#X connect 52 0 55 0;
#X connect 53 0 39 0;
#X connect 54 0 40 0;
#X connect 57 0 60 0;
#X connect 60 0 59 0;
#X connect 62 0 63 0;
#X connect 63 0 65 0;
#X connect 65 0 66 0;
#X connect 67 0 68 0;
#X connect 68 0 84 0;
#X connect 70 0 30 0;
#X connect 71 0 72 0;
#X connect 72 0 73 0;
#X connect 73 0 74 0;
#X connect 77 0 78 0;
#X connect 78 0 79 0;
#X connect 79 0 81 0;
#X connect 84 0 69 0;
#X coords 0 -1 1 1 250 135 1 100 200;
